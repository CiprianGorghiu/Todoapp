{"ast":null,"code":"var _jsxFileName = \"/Users/gorghiuciprian/Documents/Proiectele mele/Proiecte/TodoList/todo-app/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isCompletedScreen, setIsCompletedScreen] = React.useState(false);\n  const [allTasks, setAllTasks] = React.useState([]);\n  const [taskTitle, setTaskTitle] = React.useState('');\n  const [taskDescription, setTaskDescription] = React.useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-item\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: taskTitle,\n          onChange: e => setTaskTitle(e.target.value),\n          placeholder: \"What's the task title?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-item\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: taskDescription,\n          onChange: e => setTaskDescription(e.target.value),\n          placeholder: \"What's the task description?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-item\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddToDo,\n          className: \"primaryBtn\",\n          children: \"Adaugare\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `secondaryBtn ${isCompletedScreen === false && 'active'}`,\n          onClick: () => setIsCompletedScreen(false),\n          children: \" To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `secondaryBtn ${isCompletedScreen === true && 'active'}`,\n          onClick: () => setIsCompletedScreen(true),\n          children: \"Completed List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Task 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Task description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(AiOutlineCheck, {\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(AiOutlineDelete, {\n                className: \"delete-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FxwLuWMvsNeh43KP8h3h2xeHfZg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","AiOutlineDelete","AiOutlineCheck","jsxDEV","_jsxDEV","App","_s","isCompletedScreen","setIsCompletedScreen","useState","allTasks","setAllTasks","taskTitle","setTaskTitle","taskDescription","setTaskDescription","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","handleAddToDo","_c","$RefreshReg$"],"sources":["/Users/gorghiuciprian/Documents/Proiectele mele/Proiecte/TodoList/todo-app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport {AiOutlineDelete} from 'react-icons/ai';\nimport {AiOutlineCheck} from 'react-icons/ai';\n\nfunction App() {\n  const[isCompletedScreen, setIsCompletedScreen] = React.useState(false);\n  const[allTasks, setAllTasks] = React.useState([]);\n  const[taskTitle, setTaskTitle] = React.useState('');\n  const[taskDescription, setTaskDescription] = React.useState('');\n\n  return (\n    <div className=\"App\">\n    \n      <div className=\"container\">\n      <h1>Todo App</h1>\n        <div className=\"input-item\">\n\n          <input type=\"text\" value={taskTitle} onChange={(e)=>setTaskTitle(e.target.value)} placeholder=\"What's the task title?\" /> \n          </div>\n          <div className=\"input-item\">\n      \n          <input type=\"text\" value={taskDescription} onChange={(e)=>setTaskDescription(e.target.value)} placeholder=\"What's the task description?\" /> \n          </div>\n          <div className=\"input-item\">\n        \n         <button type=\"button\" onClick={handleAddToDo} className=\"primaryBtn\">Adaugare</button>\n          </div>\n        <hr />\n          <div className=\"btn-area\">\n        <button className={`secondaryBtn ${isCompletedScreen === false && 'active'}`} onClick={()=>setIsCompletedScreen(false)}> To Do</button>\n        <button className={`secondaryBtn ${isCompletedScreen === true && 'active'}`} onClick={()=>setIsCompletedScreen(true)}>Completed List</button>\n        <div className=\"task-list\">\n          <div className=\"task-item\">\n            <div>\n            <h3>Task 1</h3>\n            <p>Task description</p>\n            </div>\n            <div>\n              <AiOutlineCheck className=\"icon\" />\n              <AiOutlineDelete className=\"delete-icon\" />\n            </div>\n          </div>\n          </div>\n        </div>\n      </div>\n    \n       \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}